{
    "type": "reply",
    "tag": "ios",
    "difficulty": "1",
    "from": "http://www.jianshu.com/p/20f8d59eb8fb",
    "description": "<p>NSOperation queue?</p>\n",
    "answer": "<p>存放NSOperation的集合类。</p>\n<p>操作和操作队列，基本可以看成java中的线程和线程池的概念。用于处理ios多线程开发的问题。</p>\n<p>网上部分资料提到一点是，虽然是queue，但是却并不是带有队列的概念，放入的操作并非是按照严格的先进现出。</p>\n<p>这边又有个疑点是，对于队列来说，先进先出的概念是Afunc添加进队列，Bfunc紧跟着也进入队列，Afunc先执行这个是必然的，</p>\n<p>但是Bfunc是等Afunc完全操作完以后，B才开始启动并且执行，因此队列的概念离乱上有点违背了多线程处理这个概念。</p>\n<p>但是转念一想其实可以参考银行的取票和叫号系统。</p>\n<p>因此对于A比B先排队取票但是B率先执行完操作，我们亦然可以感性认为这还是一个队列。</p>\n<p>但是后来看到一票关于这操作队列话题的文章，其中有一句提到</p>\n<p>“因为两个操作提交的时间间隔很近，线程池中的线程，谁先启动是不定的。”</p>\n<p>瞬间觉得这个queue名字有点忽悠人了，还不如pool~</p>\n<p>综合一点，我们知道他可以比较大的用处在于可以帮组多线程编程就好了。</p>\n",
    "options": []
}